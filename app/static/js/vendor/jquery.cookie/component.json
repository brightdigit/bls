{
  "name": "jquery.cookie",
  "version": "1.3.1",
  "main": [
    "./jquery.cookie.js"
  ],
  "dependencies": {
    "jquery": ">=1.0"
  },
  "gitHead": "fd724ca9d68f7087427a5efe53d5c839a571c31f",
  "readme": "# jquery.cookie [![Build Status](https://travis-ci.org/carhartl/jquery-cookie.png?branch=master)](https://travis-ci.org/carhartl/jquery-cookie)\r\n\r\nA simple, lightweight jQuery plugin for reading, writing and deleting cookies.\r\n\r\n## Installation\r\n\r\nInclude script *after* the jQuery library (unless you are packaging scripts somehow else):\r\n\r\n    <script src=\"/path/to/jquery.cookie.js\"></script>\r\n\r\n**Do not include the script directly from GitHub (http://raw.github.com/...).** The file is being served as text/plain and as such being blocked\r\nin Internet Explorer on Windows 7 for instance (because of the wrong MIME type). Bottom line: GitHub is not a CDN.\r\n\r\n## Usage\r\n\r\nCreate session cookie:\r\n\r\n    $.cookie('the_cookie', 'the_value');\r\n\r\nCreate expiring cookie, 7 days from then:\r\n\r\n    $.cookie('the_cookie', 'the_value', { expires: 7 });\r\n\r\nCreate expiring cookie, valid across entire site:\r\n\r\n    $.cookie('the_cookie', 'the_value', { expires: 7, path: '/' });\r\n\r\nRead cookie:\r\n\r\n    $.cookie('the_cookie'); // => \"the_value\"\r\n    $.cookie('not_existing'); // => null\r\n\r\nRead all available cookies:\r\n\r\n    $.cookie(); // => { \"the_cookie\": \"the_value\", \"...remaining\": \"cookies\" }\r\n\r\nDelete cookie:\r\n\r\n    // Returns true when cookie was found, false when no cookie was found...\r\n    $.removeCookie('the_cookie');\r\n\r\n    // Same path as when the cookie was written...\r\n    $.removeCookie('the_cookie', { path: '/' });\r\n\r\n*Note: when deleting a cookie, you must pass the exact same path, domain and secure options that were used to set the cookie, unless you're relying on the default options that is.*\r\n\r\n## Configuration\r\n\r\n### raw\r\n\r\nBy default the cookie value is encoded/decoded when writing/reading, using `encodeURIComponent`/`decodeURIComponent`. Bypass this by setting raw to true:\r\n\r\n    $.cookie.raw = true;\r\n\r\n### json\r\n\r\nTurn on automatic storage of JSON objects passed as the cookie value. Assumes `JSON.stringify` and `JSON.parse`:\r\n\r\n    $.cookie.json = true;\r\n\r\n## Cookie Options\r\n\r\n### expires\r\n\r\nCookie attributes can be set globally by setting properties of the `$.cookie.defaults` object or individually for each call to `$.cookie()` by passing a plain object to the options argument. Per-call options override the default options.\r\n\r\n    expires: 365\r\n\r\nDefine lifetime of the cookie. Value can be a `Number` which will be interpreted as days from time of creation or a `Date` object. If omitted, the cookie becomes a session cookie.\r\n\r\n### path\r\n\r\n    path: '/'\r\n\r\nDefine the path where the cookie is valid. *By default the path of the cookie is the path of the page where the cookie was created (standard browser behavior).* If you want to make it available for instance across the entire domain use `path: '/'`. Default: path of page where the cookie was created.\r\n\r\n**Note regarding Internet Explorer:**\r\n\r\n> Due to an obscure bug in the underlying WinINET InternetGetCookie implementation, IEâ€™s document.cookie will not return a cookie if it was set with a path attribute containing a filename.\r\n\r\n(From [Internet Explorer Cookie Internals (FAQ)](http://blogs.msdn.com/b/ieinternals/archive/2009/08/20/wininet-ie-cookie-internals-faq.aspx))\r\n\r\nThis means one cannot set a path using `path: window.location.pathname` in case such pathname contains a filename like so: `/check.html` (or at least, such cookie cannot be read correctly).\r\n\r\n### domain\r\n\r\n    domain: 'example.com'\r\n\r\nDefine the domain where the cookie is valid. Default: domain of page where the cookie was created.\r\n\r\n### secure\r\n\r\n    secure: true\r\n\r\nIf true, the cookie transmission requires a secure protocol (https). Default: `false`.\r\n\r\n## Tests\r\n\r\nRequires Node. Startup server:\r\n\r\n    $ node test/server.js\r\n\r\nOpen in browser:\r\n\r\n    $ open http://0.0.0.0:8124/test/index.html\r\n\r\nFor quick *non cross-browser* testing use grunt:\r\n\r\n    $ grunt\r\n\r\n## Development\r\n\r\n- Source hosted at [GitHub](https://github.com/carhartl/jquery-cookie)\r\n- Report issues, questions, feature requests on [GitHub Issues](https://github.com/carhartl/jquery-cookie/issues)\r\n\r\nPull requests are very welcome! Make sure your patches are well tested. Please create a topic branch for every separate change you make.\r\n\r\n## Authors\r\n\r\n[Klaus Hartl](https://github.com/carhartl)\r\n",
  "readmeFilename": "README.md",
  "_id": "jquery.cookie@1.3.1",
  "description": "A simple, lightweight jQuery plugin for reading, writing and deleting cookies.",
  "repository": {
    "type": "git",
    "url": "git://github.com/carhartl/jquery-cookie.git"
  }
}